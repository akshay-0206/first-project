sync create(files: Express.Multer.File[], createAuthDto: CreateAuthDto) {
    const images: any = [];
    if (files) {
      for (const file of files) {
        if (file.fieldname === 'avatar') {
          createAuthDto.avatar = uploadSingleFile(file, './public/auth');
        }
        if (file.fieldname === 'avatars') {
          images.push(file);
        }
      }
      createAuthDto.avatars = uploadMultipleFiles(images, './public/auth');
    }
    const isAuthExist = await this.authModel.findOne({
      email: createAuthDto?.email,
    });
    if (isAuthExist) {
      throw new UnprocessableEntityException('User Already Exist!');
    }

    const hashedPassword = await bcrypt.hash(createAuthDto.password, 10);
    return await this.authModel.create({
      ...createAuthDto,
      password: hashedPassword,
    });
  }